{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGoods","resetSelector","setState","resetButton","good","this","className","classNames","length","type","onClick","map","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOmBC,E,4MACnBC,MAAyB,CACvBC,cAAe,O,EAGjBC,cAAgB,WACd,EAAKC,SAAS,CAAEF,cAAe,M,EAGjCG,YAAc,SAACC,EAAcJ,GAAf,OACZA,IAAkBI,EACd,EAAKF,SAAS,CAAEF,cAAe,KAC/B,EAAKE,SAAS,CAAEF,cAAeI,K,4CAGrC,WAAU,IAAD,OACCJ,EAAkBK,KAAKN,MAAvBC,cAER,OACE,uBAAMM,UAAU,oBAAhB,UACE,qBAAIA,UAAWC,IACb,QAAS,CAAE,gCAAiCP,IAD9C,UAIGA,EAAcQ,OAAd,UACMR,EADN,gBAEG,oBACHA,GACC,wBACE,UAAQ,cACRS,KAAK,SACLH,UAAU,cACV,aAAW,QACXI,QAASL,KAAKJ,mBAKpB,uBAAOK,UAAU,QAAjB,SACE,gCACGT,EAAMc,KAAI,SAACP,GAAD,OACT,qBAEE,UAAQ,OACRE,UAAWC,IACT,GAAI,CACF,+BAAgCP,IAAkBI,IALxD,UASE,6BACE,wBACEK,KAAK,SACL,UACET,IAAkBI,EACd,eACA,YAENE,UAAWC,IACT,SAAU,CAAE,UAAWP,IAAkBI,IAE3CM,QAAS,WACP,EAAKP,YAAYC,EAAMJ,IAX3B,SAeGA,IAAkBI,EACf,IACA,QAGR,oBAAI,UAAQ,YAAYE,UAAU,eAAlC,SACGF,MA9BEA,iB,GA1CYQ,aCnBjCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.11e8f57f.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string;\n};\n\nexport default class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGoods: 'Jam',\n  };\n\n  resetSelector = () => {\n    this.setState({ selectedGoods: '' });\n  };\n\n  resetButton = (good: string, selectedGoods: string) => (\n    selectedGoods === good\n      ? this.setState({ selectedGoods: '' })\n      : this.setState({ selectedGoods: good })\n  );\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <main className=\"section container\">\n        <h1 className={classNames(\n          'title', { 'is-flex is-align-items-center': selectedGoods },\n        )}\n        >\n          {selectedGoods.length\n            ? `${selectedGoods} is selected`\n            : 'No goods selected'}\n          {selectedGoods && (\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              aria-label=\"Clear\"\n              onClick={this.resetSelector}\n            />\n          )}\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map((good) => (\n              <tr\n                key={good}\n                data-cy=\"Good\"\n                className={classNames(\n                  '', {\n                    'has-background-success-light': selectedGoods === good,\n                  },\n                )}\n              >\n                <td>\n                  <button\n                    type=\"button\"\n                    data-cy={\n                      selectedGoods === good\n                        ? 'RemoveButton'\n                        : 'AddButton'\n                    }\n                    className={classNames(\n                      'button', { 'is-info': selectedGoods === good },\n                    )}\n                    onClick={() => {\n                      this.resetButton(good, selectedGoods);\n                    }}\n\n                  >\n                    {selectedGoods === good\n                      ? '-'\n                      : '+'}\n                  </button>\n                </td>\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}